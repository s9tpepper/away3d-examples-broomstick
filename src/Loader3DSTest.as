package{	import away3d.containers.View3D;	import away3d.cameras.lenses.PerspectiveLens;	import away3d.cameras.Camera3D;	import away3d.events.ResourceEvent;	import away3d.loading.ResourceManager;	import away3d.containers.ObjectContainer3D;	import away3d.events.LoaderEvent;	import away3d.loading.parsers.Max3DSParser;	import away3d.bounds.BoundingVolumeBase;	import flash.display.Sprite;	import flash.geom.Vector3D;	import flash.events.Event;	[SWF(width="800", height="450", frameRate="60", backgroundColor="#000000")]	public class Loader3DSTest extends Sprite	{		private var _view : View3D;		private var _container : ObjectContainer3D;		public function Loader3DSTest()		{			_view = new View3D();			_view.antiAlias = 2;			var camera:Camera3D = _view.camera;			camera.lens = new PerspectiveLens();			camera.z = 100;			addChild(_view);			ResourceManager.instance.addEventListener(ResourceEvent.RESOURCE_RETRIEVED, onResourceRetrieved);			ResourceManager.instance.addEventListener(LoaderEvent.LOAD_ERROR, onResourceLoadingError);			ResourceManager.instance.addEventListener(LoaderEvent.LOAD_MAP_ERROR, onResourceMapsLoadingError);			 			var url:String = "assets/models/f360.3ds";			 			//automatic rock and roll			ResourceManager.instance.getResource(url );		}		private function onResourceRetrieved(e : ResourceEvent) : void		{			_container = ObjectContainer3D(e.resource);			_view.scene.addChild(_container);			_view.camera.lookAt(_container.position);						_container.scale(10);						_view.camera.lens.far = Vector3D.distance(_container.position, _view.camera.position)+1000;			_view.camera.lens.near = 10;			 			this.addEventListener(Event.ENTER_FRAME, handleEnterFrame);		}				private function onResourceLoadingError(e:LoaderEvent) : void		{			 trace("oops, model load failed");		}				private function onResourceMapsLoadingError(e:LoaderEvent) : void		{			 trace("A map failed to load in this model: ["+e.url+"]");		}				private function handleEnterFrame(e : Event) : void		{			_container.rotationY += .5;			_view.render();		}	}}